# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      maxParallel: 4
      matrix:
        ClSomImx7_iMX7D_1GB:
          Target: ClSomImx7_iMX7D_1GB
        HummingBoardEdge_iMX6DL_1GB:
          Target: HummingBoardEdge_iMX6DL_1GB
        HummingBoardEdge_iMX6Q_2GB:
          Target: HummingBoardEdge_iMX6Q_2GB
        HummingBoardEdge_iMX6S_512MB:
          Target: HummingBoardEdge_iMX6S_512MB
        Sabre_iMX6Q_1GB:
          Target: Sabre_iMX6Q_1GB
        Sabre_iMX6QP_1GB:
          Target: Sabre_iMX6QP_1GB
        Sabre_iMX7D_1GB:
          Target: Sabre_iMX7D_1GB
        SabreLite_iMX6Q_1GB:
          Target: SabreLite_iMX6Q_1GB
        UdooNeo_iMX6SX_1GB:
          Target: UdooNeo_iMX6SX_1GB
        NXPEVK_iMX8M_4GB:
          Target: NXPEVK_iMX8M_4GB
        VAB820_iMX6Q_1GB:
          TargeT: VAB820_iMX6Q_1GB

    steps:
    - script: |
        sudo apt-get install build-essential python python-dev python-crypto python-wand device-tree-compiler bison flex swig iasl uuid-dev wget git bc libssl-dev
      displayName: Install tools

    - script: |
        wget https://releases.linaro.org/components/toolchain/binaries/6.4-2017.11/arm-linux-gnueabihf/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf.tar.xz
        tar xf gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf.tar.xz
      displayName: Download and install linaro gcc

    - script: |
        pushd ..
        git clone -b imx https://github.com/ms-iot/imx-edk2-platforms.git
        git clone --recursive https://github.com/dmcilvaney/imx-iotcore.git
        git clone --recursive -b u-boot-imx https://github.com/ms-iot/u-boot.git
        git clone -b ms-iot https://github.com/ms-iot/optee_os.git
        git clone --recursive -b tcps-feature https://github.com/Microsoft/RIoT.git
        git clone https://github.com/Microsoft/MSRsec.git
        git clone --recursive https://github.com/tianocore/edk2
        popd
      displayName: Clone repos


    # Builds all components except the final HAB signed SPL (Need to find a way to store the NXP code signing tools)
    - script: |
        echo build/firmware/$(Target)
        ls
        cd build/firmware/$(Target)
        make image.fit CROSS_COMPILE=$(Build.SourcesDirectory)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
      displayName: Build U-Boot + OP-TEE

    - script: |
        echo build/firmware/$(Target)
        ls
        cd build/firmware/$(Target)
        make update_tas CROSS_COMPILE=$(Build.SourcesDirectory)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
      displayName: Build TAs

    - script: |
        echo build/firmware/$(Target)
        ls
        cd build/firmware/$(Target)
        make uefi_fit CROSS_COMPILE=$(Build.SourcesDirectory)/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
      displayName: Build UEFI